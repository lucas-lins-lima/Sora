# =========================================================================
# SORA ROBOT - NGINX CONFIGURATION
# Configuração de proxy reverso, load balancing e otimizações
# =========================================================================

# =========================================================================
# CONFIGURAÇÕES GLOBAIS
# =========================================================================

# Usuário que executa o Nginx
user nginx;

# Número de worker processes (auto = número de CPUs)
worker_processes auto;

# Arquivo PID
pid /var/run/nginx.pid;

# Configurações de error log
error_log /var/log/nginx/error.log warn;

# Incluir módulos dinâmicos
include /etc/nginx/modules-enabled/*.conf;

# =========================================================================
# CONFIGURAÇÕES DE EVENTOS
# =========================================================================

events {
    # Número máximo de conexões por worker
    worker_connections 1024;
    
    # Usar epoll para melhor performance no Linux
    use epoll;
    
    # Aceitar múltiplas conexões simultaneamente
    multi_accept on;
    
    # Otimizar worker connections
    worker_rlimit_nofile 2048;
}

# =========================================================================
# CONFIGURAÇÕES HTTP
# =========================================================================

http {
    # =========================================================================
    # CONFIGURAÇÕES BÁSICAS
    # =========================================================================
    
    # Incluir tipos MIME
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Charset padrão
    charset utf-8;
    
    # Ocultar versão do Nginx
    server_tokens off;
    
    # Otimizações de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Tamanhos de buffer
    client_body_buffer_size 16K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 2 1k;
    
    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_requests 100;
    send_timeout 10;
    
    # =========================================================================
    # CONFIGURAÇÕES DE COMPRESSÃO
    # =========================================================================
    
    # Habilitar compressão Gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;
    
    # =========================================================================
    # CONFIGURAÇÕES DE SEGURANÇA
    # =========================================================================
    
    # Headers de segurança
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # =========================================================================
    # CONFIGURAÇÕES DE LOGGING
    # =========================================================================
    
    # Formato de log personalizado
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    # Formato de log para API
    log_format api '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent rt=$request_time '
                   'uct="$upstream_connect_time" uht="$upstream_header_time" '
                   'urt="$upstream_response_time" "$http_user_agent"';
    
    # Logs de acesso
    access_log /var/log/nginx/access.log main;
    
    # =========================================================================
    # RATE LIMITING
    # =========================================================================
    
    # Zona de rate limiting para API
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    # Zona de rate limiting para upload
    limit_req_zone $binary_remote_addr zone=upload:10m rate=5r/s;
    
    # Zona de rate limiting geral
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
    
    # =========================================================================
    # UPSTREAM - BACKEND POOL
    # =========================================================================
    
    # Pool de servidores backend Sora Robot
    upstream sora_backend {
        # Estratégia de load balancing
        least_conn;
        
        # Servidor principal
        server sora-robot:8000 max_fails=3 fail_timeout=30s;
        
        # Servidores adicionais (para scaling)
        # server sora-robot-2:8000 max_fails=3 fail_timeout=30s;
        # server sora-robot-3:8000 max_fails=3 fail_timeout=30s;
        
        # Configurações de keepalive
        keepalive 32;
    }
    
    # Pool para WebSocket
    upstream sora_websocket {
        # Usar IP hash para persistência de sessão WebSocket
        ip_hash;
        
        server sora-robot:8001 max_fails=3 fail_timeout=30s;
        # server sora-robot-2:8001 max_fails=3 fail_timeout=30s;
        
        keepalive 16;
    }
    
    # =========================================================================
    # CACHE ZONES
    # =========================================================================
    
    # Cache para arquivos estáticos
    proxy_cache_path /var/cache/nginx/static 
                     levels=1:2 
                     keys_zone=static_cache:10m 
                     max_size=1g 
                     inactive=60m 
                     use_temp_path=off;
    
    # Cache para API responses
    proxy_cache_path /var/cache/nginx/api 
                     levels=1:2 
                     keys_zone=api_cache:10m 
                     max_size=100m 
                     inactive=10m 
                     use_temp_path=off;
    
    # =========================================================================
    # SERVIDOR PRINCIPAL - HTTP
    # =========================================================================
    
    server {
        listen 80;
        listen [::]:80;
        
        server_name _;
        
        # Redirecionar para HTTPS em produção
        # return 301 https://$server_name$request_uri;
        
        # Root para arquivos estáticos
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # =====================================================================
        # CONFIGURAÇÕES GERAIS
        # =====================================================================
        
        # Rate limiting geral
        limit_req zone=general burst=50 nodelay;
        
        # Headers personalizados
        add_header X-Served-By "Sora-Robot-Nginx" always;
        add_header X-Cache-Status $upstream_cache_status;
        
        # =====================================================================
        # HEALTH CHECK
        # =====================================================================
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # =====================================================================
        # ARQUIVOS ESTÁTICOS - FRONTEND
        # =====================================================================
        
        # Página principal
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache para HTML
            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public, no-transform";
            }
            
            # Cache longo para assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
                
                # Compressão para assets
                gzip_static on;
            }
        }
        
        # Assets específicos
        location /assets/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # Favicon
        location = /favicon.ico {
            expires 1y;
            access_log off;
            log_not_found off;
        }
        
        # Robots.txt
        location = /robots.txt {
            expires 1d;
            access_log off;
            log_not_found off;
        }
        
        # =====================================================================
        # API PROXY - BACKEND
        # =====================================================================
        
        location /api/ {
            # Rate limiting para API
            limit_req zone=api burst=20 nodelay;
            
            # Logs específicos para API
            access_log /var/log/nginx/api_access.log api;
            
            # Proxy para backend
            proxy_pass http://sora_backend/;
            
            # Headers de proxy
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Configurações de proxy
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # HTTP version
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Cache para endpoints específicos
            location ~ ^/api/(status|config|metrics)$ {
                proxy_pass http://sora_backend;
                
                # Cache de 30 segundos para endpoints de status
                proxy_cache api_cache;
                proxy_cache_valid 200 30s;
                proxy_cache_key "$scheme$request_method$host$request_uri";
                proxy_cache_bypass $http_cache_control;
                
                add_header X-Cache-Status $upstream_cache_status;
            }
        }
        
        # Endpoints diretos (sem /api prefix)
        location ~ ^/(status|health|docs|redoc)$ {
            proxy_pass http://sora_backend;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache para documentação
            location ~ ^/(docs|redoc) {
                proxy_cache static_cache;
                proxy_cache_valid 200 10m;
                add_header X-Cache-Status $upstream_cache_status;
            }
        }
        
        # =====================================================================
        # WEBSOCKET PROXY
        # =====================================================================
        
        location /ws/ {
            proxy_pass http://sora_websocket/;
            
            # Headers necessários para WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configurações de timeout para WebSocket
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            
            # Desabilitar buffering para WebSocket
            proxy_buffering off;
            
            # Rate limiting mais flexível para WebSocket
            limit_req zone=general burst=100 nodelay;
        }
        
        # =====================================================================
        # UPLOAD DE ARQUIVOS
        # =====================================================================
        
        location /upload/ {
            # Rate limiting para upload
            limit_req zone=upload burst=10 nodelay;
            
            # Tamanho máximo de upload
            client_max_body_size 50m;
            client_body_timeout 300s;
            
            proxy_pass http://sora_backend/upload/;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts maiores para upload
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Desabilitar buffering para uploads grandes
            proxy_request_buffering off;
        }
        
        # =====================================================================
        # MONITORAMENTO E MÉTRICAS
        # =====================================================================
        
        location /metrics {
            # Restringir acesso às métricas
            allow 172.20.0.0/16;  # Rede Docker
            allow 127.0.0.1;      # Localhost
            deny all;
            
            proxy_pass http://sora_backend/metrics;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Sem cache para métricas
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
        
        # Status do Nginx
        location /nginx_status {
            stub_status on;
            access_log off;
            
            # Restringir acesso
            allow 172.20.0.0/16;
            allow 127.0.0.1;
            deny all;
        }
        
        # =====================================================================
        # SEGURANÇA E PROTEÇÕES
        # =====================================================================
        
        # Bloquear acesso a arquivos sensíveis
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Bloquear arquivos de configuração
        location ~ \.(conf|config|env|log|sql|sh|py)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Bloquear user agents maliciosos
        if ($http_user_agent ~* (nmap|nikto|wikto|sf|sqlmap|bsqlbf|w3af|acunetix|havij|appscan)) {
            return 403;
        }
        
        # Bloquear IPs suspeitos (exemplo)
        # location / {
        #     deny 192.168.1.100;
        #     allow all;
        # }
        
        # =====================================================================
        # ERROR PAGES
        # =====================================================================
        
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
    
    # =========================================================================
    # SERVIDOR HTTPS (Para produção)
    # =========================================================================
    
    # Descomentar para usar HTTPS
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     
    #     server_name your-domain.com;
    #     
    #     # Certificados SSL
    #     ssl_certificate /etc/ssl/certs/your-domain.crt;
    #     ssl_certificate_key /etc/ssl/private/your-domain.key;
    #     
    #     # Configurações SSL
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     
    #     # [Resto da configuração igual ao servidor HTTP]
    # }
    
    # =========================================================================
    # CONFIGURAÇÕES ADICIONAIS
    # =========================================================================
    
    # Incluir configurações específicas por site
    include /etc/nginx/conf.d/*.conf;
}

# =========================================================================
# COMENTÁRIOS E DOCUMENTAÇÃO
# =========================================================================

# Este arquivo nginx.conf fornece:
# 
# 1. PROXY REVERSO:
#    - Roteia requisições para backend Sora Robot
#    - Load balancing entre múltiplas instâncias
#    - WebSocket support para comunicação real-time
# 
# 2. SERVING DE ARQUIVOS ESTÁTICOS:
#    - Frontend HTML/CSS/JS otimizado
#    - Cache inteligente por tipo de arquivo
#    - Compressão Gzip para performance
# 
# 3. SEGURANÇA:
#    - Headers de segurança padrão
#    - Rate limiting por zona
#    - Bloqueio de arquivos sensíveis
#    - Proteção contra user agents maliciosos
# 
# 4. PERFORMANCE:
#    - Cache de proxy para APIs
#    - Compressão de conteúdo
#    - Keepalive connections
#    - Otimizações de buffer
# 
# 5. MONITORAMENTO:
#    - Logs detalhados de acesso e erro
#    - Métricas de performance
#    - Health checks
#    - Status do Nginx
# 
# 6. ESCALABILIDADE:
#    - Suporte a múltiplos workers backend
#    - Configurações de upstream
#    - Load balancing strategies
# 
# PARA USAR EM PRODUÇÃO:
# 1. Configurar certificados SSL
# 2. Ajustar server_name para seu domínio
# 3. Configurar upstream com múltiplos servidores
# 4. Revisar configurações de rate limiting
# 5. Configurar backup servers
# 6. Monitorar logs e métricas